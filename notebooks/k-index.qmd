---
title: "Agriculture processing"
format:
  html:
    code-fold: true
jupyter: python3
---

```{python}
import os
os.chdir("..")
```

```{python}
import duckdb
import polars as pl
import geopandas as gpd
import altair as alt
import ibis
from src.data.data_process import DataReg
ibis.options.interactive = True
dr = DataReg()
```

```{python}
conn = duckdb.connect("data.ddb")
init_df = conn.sql("SELECT year,qtr,phys_addr_5_zip,first_month_employment,total_wages,second_month_employment,third_month_employment,naics_code FROM qcewtable").pl()
```

```{python}
df_qcew = init_df
df_qcew = df_qcew.rename({"phys_addr_5_zip":"zipcode"})
df_qcew = df_qcew.filter((pl.col("zipcode") != "") & (pl.col("naics_code") != ""))

df_qcew = df_qcew.with_columns(
    first_month_employment=pl.col("first_month_employment").fill_null(strategy="zero"),
    second_month_employment=pl.col("second_month_employment").fill_null(strategy="zero"),
    third_month_employment=pl.col("third_month_employment").fill_null(strategy="zero"),
    total_wages= pl.col("total_wages").fill_null(strategy="zero")
    )
df_qcew = df_qcew.with_columns(
            total_employment=(
                pl.col("first_month_employment") 
                + pl.col("second_month_employment")
                + pl.col("third_month_employment")
            ) / 3
        )
df_qcew = df_qcew.filter((pl.col("total_employment") != 0) & (pl.col("total_wages") != 0) )
df_qcew = df_qcew.with_columns(
    wages_employee=pl.col("total_wages") / pl.col("total_employment"),
    sector=pl.col("naics_code").str.slice(0,2)
)
df_qcew = df_qcew.group_by(["year","qtr","sector","zipcode"]).agg(
    mw_industry=pl.col("wages_employee").mean(),
    total_employment=pl.col("total_employment").sum()
)
df_qcew = df_qcew.with_columns(
        min_wage=pl.when((pl.col("year") >= 2002) & (pl.col("year") < 2010)).then(5.15 * 65 * 8)
        .when((pl.col("year") >= 2010) & (pl.col("year") < 2023)).then(7.25 * 65 * 8)
        .when(pl.col("year") == 2023).then(8.5 * 65 * 8)
        .when(pl.col("year") == 2024).then(10.5 * 65 * 8)
        .otherwise(-1)
    )
df_qcew = df_qcew.with_columns(k_index=pl.col("min_wage") / pl.col("mw_industry"))
df_qcew
```

```{python}
gdf = gpd.read_file("data/external/zip_shape.zip")
gdf = gdf[gdf["ZCTA5CE20"].str.startswith("00")].rename(columns={"ZCTA5CE20":"zipcode"}).reset_index()
```

```{python}
gdf = gdf[["zipcode","geometry"]]
gdf["zipcode"] = gdf["zipcode"].str.strip()
```


```{python}
tmp = df_qcew.to_pandas()
master_df = tmp.join(gdf.set_index("zipcode"), on="zipcode", how="inner", validate="m:1").reset_index()
master_df = gpd.GeoDataFrame(data=master_df, geometry=master_df["geometry"])
tmp = master_df[(master_df["year"] == 2024) & ((master_df["qtr"] == 1))]
```

```{python}
alt.Chart(tmp).mark_geoshape().encode(
    color=alt.Color("k_index:Q").scale(scheme='viridis')
).transform_lookup(
    lookup='zipcode',
    from_=alt.LookupData(tmp, 'zipcode', ['k_index'])
).project(
    type='mercator'
).properties(
    width="container",
)
# tmp.plot("k_index")
```

```{python}
chart = alt.Chart(tmp).mark_geoshape().encode(
    shape='geo:G',
    color=alt.Color("k_index:Q", scale=alt.Scale(scheme='viridis', domain=[0, 1])),
    tooltip=['zipcode:N', 'k_index:Q'],
    facet=alt.Facet('sector:Q', columns=2),
).transform_lookup(
    lookup='zipcode',
    from_=alt.LookupData(data=tmp, key="zipcode"),
    as_='geo'
).project(
    type='mercator'
).properties(
    width=300,
    height=175,
)
chart.save('chart.png', ppi=200)
```
