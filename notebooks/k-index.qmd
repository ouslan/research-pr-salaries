---
title: "Agriculture processing"
format:
  html:
    code-fold: true
jupyter: python3
---

```{python}
import os
os.chdir("..")
```

```{python}
import pandas as pd
import duckdb
import ibis
from src.data.data_process import DataReg
import geopandas as gpd
ibis.options.interactive = True
d = DataReg()
```

```{python}
d.semipar_data()
```

```{python}
df_qcew = d.conn.table("qcewtable")
df_qcew = df_qcew.filter(~df_qcew.geom.x().isnull())
df_qcew = df_qcew.filter(df_qcew.geom.x() != 0)
df_qcew = df_qcew.mutate(
    first_month_employment=df_qcew.first_month_employment.fill_null(0),
    second_month_employment=df_qcew.second_month_employment.fill_null(0),
    third_month_employment=df_qcew.third_month_employment.fill_null(0),
    total_wages=df_qcew.total_wages.fill_null(0),
)
# TODO: ensure that there is no null inf or nan in the data
df_qcew = df_qcew.mutate(
    total_employment=(
        df_qcew.first_month_employment
        + df_qcew.second_month_employment
        + df_qcew.third_month_employment
    )
    / 3
)

df_qcew = df_qcew.mutate(
    wages_employee=df_qcew.total_wages / df_qcew.total_employment,
    naics2=df_qcew.naics_code.substr(0, 2),
)
df_qcew = df_qcew.mutate(
    wages_employee=ibis.case()
    .when((df_qcew.wages_employee.isnan()), 0.0)
    .else_(df_qcew.wages_employee)
    .end()
)

df_qcew = df_qcew.select(
    "id",
    "year",
    "qtr",
    "naics2",
    "total_employment",
    "wages_employee",
    "total_wages",
    "geom",
)
df_qcew
```

```{python}
df = df_qcew
gdf = d.conn.table("countytable")
for muni in range(1, 5): #gdf.id.max().execute() - 1
  try:
    tmp = gdf.filter(gdf.id == muni).geom.as_scalar()
    temp = df.filter(df.geom.within(tmp)) 
    temp = temp.mutate(county_id=muni)
    master_df = ibis.union(master_df, temp)
  except NameError:
    tmp = gdf.filter(gdf.id == muni).geom.as_scalar()
    temp = df.filter(df.geom.within(tmp))
    temp = temp.mutate(
      county_id=muni)
    master_df = temp
master_df = master_df.mutate(
    wages_employee=ibis.case()
      .when((master_df.wages_employee.isnan()), 0.0)
      .else_(master_df.wages_employee)
      .end()
)
master_df
```

```{python}
df_qcew = master_df.group_by(["year", "qtr", "naics2", "county_id"]).aggregate([
    master_df.wages_employee.mean().name("mw_industry"),
    master_df.total_employment.sum().name("total_employment"),

])
df_qcew = df_qcew.mutate(
            min_wage=ibis.case()
                .when((df_qcew.year >= 2002) & (df_qcew.year < 2009), 5.15 * 65 * 8)
                .when((df_qcew.year >= 2010) & (df_qcew.year < 2023), 7.25 * 65 * 8)
                .when((df_qcew.year == 2023), 8.5 * 65 * 8)
                .when((df_qcew.year == 2024), 10.5 * 65 * 8)
                .else_(None)
                .end(),
        )
df_qcew
```

```{python}
df_qcew = df_qcew.mutate(
    k_index=df_qcew.min_wage/df_qcew.mw_industry
    )
df_qcew
```

```{python}
df_qcew.join(gdf, df_qcew.county_id == gdf.id)
```
