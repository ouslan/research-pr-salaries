---
title: "Agriculture processing"
format:
  html:
    code-fold: true
jupyter: python3
---

```{python}
from pygam import PoissonGAM, s, te, LinearGAM, GAM
from src.data.data_process import DataReg
import matplotlib.pyplot as plt
#import geopandas as gpd
import pandas as pd
import numpy as np
import ibis

ibis.options.interactive = True
```

```{python}
d = DataReg()
df = d.semipar_data()
```

```{python}
df = df.mutate(
    wages_employee=df.total_employment/df.total_wages,
    date=df.year.cast("string") + "Q" + df.qtr.cast("string"),
    )
df = df.select(["year", "qtr", "ein", "total_employment", "p_snap", "car_truck_or_van_nn_drove_alone", "p_with_social_security", "population_16_years_and_over", "own_children_under_6_years", "own_children_6_to_17_years", "with_supplemental_security_incom", "latitude", "longitude"]).to_pandas()

var = ["year", "p_snap",  "latitude", "longitude"]
len(var)
```

```{python}
df = df[df["latitude"] != ""]
df["latitude"] = df["latitude"].astype(float)
df["longitude"] = df["longitude"].astype(float)
df
```

```{python}
# GAMM Mix model (Random Effects)
# binomal & categoricalas faactor 
gam = LinearGAM(s(0, n_splines=200) + s(1, n_splines=200) + te(2, 3)).fit(df[var].values, df[["total_employment"]].values)
gam.summary()
```

```{python}
plt.ion()
plt.rcParams['figure.figsize'] = (12, 8)
XX = gam.generate_X_grid(term=2, meshgrid=True)
Z = gam.partial_dependence(term=2, X=XX, meshgrid=True)

ax = plt.axes(projection='3d')
ax.plot_surface(XX[1], XX[1], Z, cmap='viridis')
```


```{python}
XX
```

```{python}
X = df[var]
y = df[["total_employment"]]
gam = LinearGAM(s(0, n_splines=200) + s(1, n_splines=200)+ te(2, 3)).gridsearch(X.values, y.values)
gam.summary()
```

```{python}
plt.figure()
fig, axs = plt.subplots(1,2)

titles = var
for i, ax in enumerate(axs):
    XX = gam.generate_X_grid(term=i)
    ax.plot(XX[:, i], gam.partial_dependence(term=i, X=XX))
    ax.plot(XX[:, i], gam.partial_dependence(term=i, X=XX, width=.95)[1], c='r', ls='--')
    if i == 0:
        ax.set_ylim(-30,30)
    ax.set_title(titles[i])
```

```{python}
from pygam import PoissonGAM, s, te
from pygam.datasets import chicago


X = chicago(return_X_y=False)
X
```